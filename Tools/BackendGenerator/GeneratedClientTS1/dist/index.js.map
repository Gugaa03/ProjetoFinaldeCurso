{"version":3,"file":"index.js","sources":["../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/apiAuthRegister.ts","../src/operations/apiAuthLogin.ts","../src/operations/apiAuthLogout.ts","../src/operations/apiAuthGetAllUsers.ts","../src/operations/apiAuthDeleteName.ts","../src/operations/apiEvent.ts","../src/operations/apiEventId.ts","../src/operations/enableEvent.ts","../src/operations/disabledEvents.ts","../src/operations/apiTesteHelloWord.ts","../src/operations/apiTesteTestStrings.ts","../src/operations/apiTesteGetTesteStringByIndex.ts","../src/operations/apiTesteUpdateTesteStringByIndex.ts","../src/operations/apiTeste.ts","../src/operations/apiTicketBuy.ts","../src/eventsAPI.ts"],"sourcesContent":["import * as coreClient from \"@azure/core-client\";\n\nexport const UserDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserDetails\",\n    modelProperties: {\n      userName: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"userName\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      password: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"password\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      email: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"email\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const LoginCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoginCredentials\",\n    modelProperties: {\n      username: {\n        serializedName: \"username\",\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      password: {\n        serializedName: \"password\",\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      name: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      description: {\n        serializedName: \"description\",\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      type: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      startDate: {\n        serializedName: \"startDate\",\n        required: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      endDate: {\n        serializedName: \"endDate\",\n        required: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      createdBy: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"createdBy\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      updatedBy: {\n        serializedName: \"updatedBy\",\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      createdOn: {\n        serializedName: \"createdOn\",\n        required: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      updatedOn: {\n        serializedName: \"updatedOn\",\n        nullable: true,\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      photo: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"photo\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      price: {\n        serializedName: \"price\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      location: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      tickets: {\n        serializedName: \"tickets\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Ticket\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Ticket: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ticket\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      idEvent: {\n        serializedName: \"idEvent\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      event: {\n        serializedName: \"event\",\n        type: {\n          name: \"Composite\",\n          className: \"Event\",\n        },\n      },\n      ticketBuyer: {\n        serializedName: \"ticketBuyer\",\n        type: {\n          name: \"Composite\",\n          className: \"TicketBuyers\",\n        },\n      },\n    },\n  },\n};\n\nexport const TicketBuyers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TicketBuyers\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      userEmail: {\n        constraints: {\n          MinLength: 1,\n        },\n        serializedName: \"userEmail\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vatNumber: {\n        serializedName: \"vatNumber\",\n        nullable: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      boughtOn: {\n        serializedName: \"boughtOn\",\n        type: {\n          name: \"DateTime\",\n        },\n      },\n      ticketId: {\n        serializedName: \"ticketId\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ticket: {\n        serializedName: \"ticket\",\n        type: {\n          name: \"Composite\",\n          className: \"Ticket\",\n        },\n      },\n    },\n  },\n};\n\nexport const EnableEventInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EnableEventInput\",\n    modelProperties: {\n      eventId: {\n        serializedName: \"eventId\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const BuyTicketInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuyTicketInput\",\n    modelProperties: {\n      eventId: {\n        serializedName: \"eventId\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      userEmail: {\n        serializedName: \"userEmail\",\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  UserDetails as UserDetailsMapper,\n  LoginCredentials as LoginCredentialsMapper,\n  Event as EventMapper,\n  EnableEventInput as EnableEventInputMapper,\n  BuyTicketInput as BuyTicketInputMapper,\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: UserDetailsMapper,\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: LoginCredentialsMapper,\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: EventMapper,\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const id1: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"Id\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: EnableEventInputMapper,\n};\n\nexport const i: OperationQueryParameter = {\n  parameterPath: [\"options\", \"i\"],\n  mapper: {\n    serializedName: \"i\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const newStr: OperationQueryParameter = {\n  parameterPath: [\"options\", \"newStr\"],\n  mapper: {\n    serializedName: \"newStr\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: BuyTicketInputMapper,\n};\n","import { ApiAuthRegister } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiAuthRegisterPostOptionalParams } from \"../models\";\n\n/** Class containing ApiAuthRegister operations. */\nexport class ApiAuthRegisterImpl implements ApiAuthRegister {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiAuthRegister class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(options?: ApiAuthRegisterPostOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Auth/Register\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import { ApiAuthLogin } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiAuthLoginPostOptionalParams } from \"../models\";\n\n/** Class containing ApiAuthLogin operations. */\nexport class ApiAuthLoginImpl implements ApiAuthLogin {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiAuthLogin class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(options?: ApiAuthLoginPostOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Auth/Login\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import { ApiAuthLogout } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiAuthLogoutPostOptionalParams } from \"../models\";\n\n/** Class containing ApiAuthLogout operations. */\nexport class ApiAuthLogoutImpl implements ApiAuthLogout {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiAuthLogout class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(options?: ApiAuthLogoutPostOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Auth/Logout\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiAuthGetAllUsers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiAuthGetAllUsersGetOptionalParams } from \"../models\";\n\n/** Class containing ApiAuthGetAllUsers operations. */\nexport class ApiAuthGetAllUsersImpl implements ApiAuthGetAllUsers {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiAuthGetAllUsers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  get(options?: ApiAuthGetAllUsersGetOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Auth/GetAllUsers\",\n  httpMethod: \"GET\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiAuthDeleteName } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiAuthDeleteNameDeleteOptionalParams } from \"../models\";\n\n/** Class containing ApiAuthDeleteName operations. */\nexport class ApiAuthDeleteNameImpl implements ApiAuthDeleteName {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiAuthDeleteName class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /**\n   * @param name\n   * @param options The options parameters.\n   */\n  delete(\n    name: string,\n    options?: ApiAuthDeleteNameDeleteOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { name, options },\n      deleteOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Auth/Delete/{name}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host, Parameters.name],\n  serializer,\n};\n","import { ApiEvent } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport {\n  ApiEventGetOptionalParams,\n  ApiEventPostOptionalParams,\n} from \"../models\";\n\n/** Class containing ApiEvent operations. */\nexport class ApiEventImpl implements ApiEvent {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiEvent class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  get(options?: ApiEventGetOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n\n  /** @param options The options parameters. */\n  post(options?: ApiEventPostOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Event\",\n  httpMethod: \"GET\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host],\n  serializer,\n};\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Event\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import { ApiEventId } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport {\n  ApiEventIdGetOptionalParams,\n  ApiEventIdDeleteOptionalParams,\n  ApiEventIdPutOptionalParams,\n} from \"../models\";\n\n/** Class containing ApiEventId operations. */\nexport class ApiEventIdImpl implements ApiEventId {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiEventId class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /**\n   * @param id\n   * @param options The options parameters.\n   */\n  get(id: number, options?: ApiEventIdGetOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ id, options }, getOperationSpec);\n  }\n\n  /**\n   * @param id\n   * @param options The options parameters.\n   */\n  delete(id: number, options?: ApiEventIdDeleteOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest(\n      { id, options },\n      deleteOperationSpec,\n    );\n  }\n\n  /**\n   * @param id\n   * @param options The options parameters.\n   */\n  put(id: number, options?: ApiEventIdPutOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ id, options }, putOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Event/{id}\",\n  httpMethod: \"GET\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host, Parameters.id],\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Event/{id}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host, Parameters.id],\n  serializer,\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Event/{Id}\",\n  httpMethod: \"PUT\",\n  responses: { 200: {} },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import { EnableEvent } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { EnableEventPostOptionalParams } from \"../models\";\n\n/** Class containing EnableEvent operations. */\nexport class EnableEventImpl implements EnableEvent {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class EnableEvent class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(options?: EnableEventPostOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/EnableEvent\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import { DisabledEvents } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { DisabledEventsGetOptionalParams } from \"../models\";\n\n/** Class containing DisabledEvents operations. */\nexport class DisabledEventsImpl implements DisabledEvents {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class DisabledEvents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  get(options?: DisabledEventsGetOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/DisabledEvents\",\n  httpMethod: \"GET\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import { ApiTesteHelloWord } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiTesteHelloWordGetOptionalParams } from \"../models\";\n\n/** Class containing ApiTesteHelloWord operations. */\nexport class ApiTesteHelloWordImpl implements ApiTesteHelloWord {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiTesteHelloWord class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  get(options?: ApiTesteHelloWordGetOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Teste/HelloWord\",\n  httpMethod: \"GET\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiTesteTestStrings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiTesteTestStringsGetOptionalParams } from \"../models\";\n\n/** Class containing ApiTesteTestStrings operations. */\nexport class ApiTesteTestStringsImpl implements ApiTesteTestStrings {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiTesteTestStrings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  get(options?: ApiTesteTestStringsGetOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, getOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Teste/testStrings\",\n  httpMethod: \"GET\",\n  responses: { 200: {} },\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiTesteGetTesteStringByIndex } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiTesteGetTesteStringByIndexPostOptionalParams } from \"../models\";\n\n/** Class containing ApiTesteGetTesteStringByIndex operations. */\nexport class ApiTesteGetTesteStringByIndexImpl\n  implements ApiTesteGetTesteStringByIndex\n{\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiTesteGetTesteStringByIndex class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(\n    options?: ApiTesteGetTesteStringByIndexPostOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Teste/GetTesteStringByIndex\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.i],\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiTesteUpdateTesteStringByIndex } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiTesteUpdateTesteStringByIndexPostOptionalParams } from \"../models\";\n\n/** Class containing ApiTesteUpdateTesteStringByIndex operations. */\nexport class ApiTesteUpdateTesteStringByIndexImpl\n  implements ApiTesteUpdateTesteStringByIndex\n{\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiTesteUpdateTesteStringByIndex class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(\n    options?: ApiTesteUpdateTesteStringByIndexPostOptionalParams,\n  ): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Teste/UpdateTesteStringByIndex\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.i, Parameters.newStr],\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiTeste } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiTesteDeleteOptionalParams } from \"../models\";\n\n/** Class containing ApiTeste operations. */\nexport class ApiTesteImpl implements ApiTeste {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiTeste class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  delete(options?: ApiTesteDeleteOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Teste\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.i],\n  urlParameters: [Parameters.$host],\n  serializer,\n};\n","import { ApiTicketBuy } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { EventsAPI } from \"../eventsAPI\";\nimport { ApiTicketBuyPostOptionalParams } from \"../models\";\n\n/** Class containing ApiTicketBuy operations. */\nexport class ApiTicketBuyImpl implements ApiTicketBuy {\n  private readonly client: EventsAPI;\n\n  /**\n   * Initialize a new instance of the class ApiTicketBuy class.\n   * @param client Reference to the service client\n   */\n  constructor(client: EventsAPI) {\n    this.client = client;\n  }\n\n  /** @param options The options parameters. */\n  post(options?: ApiTicketBuyPostOptionalParams): Promise<void> {\n    return this.client.sendOperationRequest({ options }, postOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/api/Ticket/Buy\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  ApiAuthRegisterImpl,\n  ApiAuthLoginImpl,\n  ApiAuthLogoutImpl,\n  ApiAuthGetAllUsersImpl,\n  ApiAuthDeleteNameImpl,\n  ApiEventImpl,\n  ApiEventIdImpl,\n  EnableEventImpl,\n  DisabledEventsImpl,\n  ApiTesteHelloWordImpl,\n  ApiTesteTestStringsImpl,\n  ApiTesteGetTesteStringByIndexImpl,\n  ApiTesteUpdateTesteStringByIndexImpl,\n  ApiTesteImpl,\n  ApiTicketBuyImpl,\n} from \"./operations\";\nimport {\n  ApiAuthRegister,\n  ApiAuthLogin,\n  ApiAuthLogout,\n  ApiAuthGetAllUsers,\n  ApiAuthDeleteName,\n  ApiEvent,\n  ApiEventId,\n  EnableEvent,\n  DisabledEvents,\n  ApiTesteHelloWord,\n  ApiTesteTestStrings,\n  ApiTesteGetTesteStringByIndex,\n  ApiTesteUpdateTesteStringByIndex,\n  ApiTeste,\n  ApiTicketBuy,\n} from \"./operationsInterfaces\";\nimport { EventsAPIOptionalParams } from \"./models\";\n\nexport class EventsAPI extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the EventsAPI class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    $host: string,\n    options?: EventsAPIOptionalParams,\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: EventsAPIOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials,\n    };\n\n    const packageDetails = `azsdk-js-eventsAPI/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] =\n        options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName,\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge,\n          },\n        }),\n      );\n    }\n    // Parameter assignments\n    this.$host = $host;\n    this.apiAuthRegister = new ApiAuthRegisterImpl(this);\n    this.apiAuthLogin = new ApiAuthLoginImpl(this);\n    this.apiAuthLogout = new ApiAuthLogoutImpl(this);\n    this.apiAuthGetAllUsers = new ApiAuthGetAllUsersImpl(this);\n    this.apiAuthDeleteName = new ApiAuthDeleteNameImpl(this);\n    this.apiEvent = new ApiEventImpl(this);\n    this.apiEventId = new ApiEventIdImpl(this);\n    this.enableEvent = new EnableEventImpl(this);\n    this.disabledEvents = new DisabledEventsImpl(this);\n    this.apiTesteHelloWord = new ApiTesteHelloWordImpl(this);\n    this.apiTesteTestStrings = new ApiTesteTestStringsImpl(this);\n    this.apiTesteGetTesteStringByIndex = new ApiTesteGetTesteStringByIndexImpl(\n      this,\n    );\n    this.apiTesteUpdateTesteStringByIndex =\n      new ApiTesteUpdateTesteStringByIndexImpl(this);\n    this.apiTeste = new ApiTesteImpl(this);\n    this.apiTicketBuy = new ApiTicketBuyImpl(this);\n  }\n\n  apiAuthRegister: ApiAuthRegister;\n  apiAuthLogin: ApiAuthLogin;\n  apiAuthLogout: ApiAuthLogout;\n  apiAuthGetAllUsers: ApiAuthGetAllUsers;\n  apiAuthDeleteName: ApiAuthDeleteName;\n  apiEvent: ApiEvent;\n  apiEventId: ApiEventId;\n  enableEvent: EnableEvent;\n  disabledEvents: DisabledEvents;\n  apiTesteHelloWord: ApiTesteHelloWord;\n  apiTesteTestStrings: ApiTesteTestStrings;\n  apiTesteGetTesteStringByIndex: ApiTesteGetTesteStringByIndex;\n  apiTesteUpdateTesteStringByIndex: ApiTesteUpdateTesteStringByIndex;\n  apiTeste: ApiTeste;\n  apiTicketBuy: ApiTicketBuy;\n}\n"],"names":["UserDetailsMapper","LoginCredentialsMapper","EventMapper","EnableEventInputMapper","BuyTicketInputMapper","postOperationSpec","serializer","coreClient","Parameters.body","Parameters.$host","Parameters.contentType","Parameters.body1","getOperationSpec","deleteOperationSpec","Parameters.name","Parameters.body2","Parameters.id","Parameters.id1","Parameters.body3","Parameters.i","Parameters.newStr","Parameters.body4","coreRestPipeline"],"mappings":"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"}
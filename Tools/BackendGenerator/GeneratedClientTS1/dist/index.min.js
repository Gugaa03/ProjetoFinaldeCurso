"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline");function _interopNamespace(i){var r;return i&&i.__esModule?i:(r=Object.create(null),i&&Object.keys(i).forEach(function(e){var t;"default"!==e&&(t=Object.getOwnPropertyDescriptor(i,e),Object.defineProperty(r,e,t.get?t:{enumerable:!0,get:function(){return i[e]}}))}),r.default=i,Object.freeze(r))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const UserDetails={type:{name:"Composite",className:"UserDetails",modelProperties:{userName:{constraints:{MinLength:1},serializedName:"userName",required:!0,type:{name:"String"}},password:{constraints:{MinLength:1},serializedName:"password",required:!0,type:{name:"String"}},email:{constraints:{MinLength:1},serializedName:"email",required:!0,type:{name:"String"}}}}},LoginCredentials={type:{name:"Composite",className:"LoginCredentials",modelProperties:{username:{serializedName:"username",nullable:!0,type:{name:"String"}},password:{serializedName:"password",nullable:!0,type:{name:"String"}}}}},Event={type:{name:"Composite",className:"Event",modelProperties:{id:{serializedName:"id",type:{name:"Number"}},name:{constraints:{MinLength:1},serializedName:"name",required:!0,type:{name:"String"}},description:{serializedName:"description",nullable:!0,type:{name:"String"}},type:{constraints:{MinLength:1},serializedName:"type",required:!0,type:{name:"String"}},startDate:{serializedName:"startDate",required:!0,type:{name:"DateTime"}},endDate:{serializedName:"endDate",required:!0,type:{name:"DateTime"}},capacity:{serializedName:"capacity",required:!0,type:{name:"Number"}},createdBy:{constraints:{MinLength:1},serializedName:"createdBy",required:!0,type:{name:"String"}},updatedBy:{serializedName:"updatedBy",nullable:!0,type:{name:"String"}},createdOn:{serializedName:"createdOn",required:!0,type:{name:"DateTime"}},updatedOn:{serializedName:"updatedOn",nullable:!0,type:{name:"DateTime"}},photo:{constraints:{MinLength:1},serializedName:"photo",required:!0,type:{name:"String"}},price:{serializedName:"price",type:{name:"Number"}},location:{constraints:{MinLength:1},serializedName:"location",required:!0,type:{name:"String"}},isEnabled:{serializedName:"isEnabled",type:{name:"Boolean"}},tickets:{serializedName:"tickets",readOnly:!0,nullable:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Ticket"}}}}}}},Ticket={type:{name:"Composite",className:"Ticket",modelProperties:{id:{serializedName:"id",type:{name:"Number"}},idEvent:{serializedName:"idEvent",type:{name:"Number"}},event:{serializedName:"event",type:{name:"Composite",className:"Event"}},ticketBuyer:{serializedName:"ticketBuyer",type:{name:"Composite",className:"TicketBuyers"}}}}},TicketBuyers={type:{name:"Composite",className:"TicketBuyers",modelProperties:{id:{serializedName:"id",type:{name:"Number"}},userEmail:{constraints:{MinLength:1},serializedName:"userEmail",required:!0,type:{name:"String"}},vatNumber:{serializedName:"vatNumber",nullable:!0,type:{name:"Number"}},boughtOn:{serializedName:"boughtOn",type:{name:"DateTime"}},ticketId:{serializedName:"ticketId",type:{name:"Number"}},ticket:{serializedName:"ticket",type:{name:"Composite",className:"Ticket"}}}}},EnableEventInput={type:{name:"Composite",className:"EnableEventInput",modelProperties:{eventId:{serializedName:"eventId",type:{name:"Number"}}}}},BuyTicketInput={type:{name:"Composite",className:"BuyTicketInput",modelProperties:{eventId:{serializedName:"eventId",type:{name:"Number"}},userEmail:{serializedName:"userEmail",nullable:!0,type:{name:"String"}}}}};var Mappers=Object.freeze({__proto__:null,UserDetails:UserDetails,LoginCredentials:LoginCredentials,Event:Event,Ticket:Ticket,TicketBuyers:TicketBuyers,EnableEventInput:EnableEventInput,BuyTicketInput:BuyTicketInput});const contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},body={parameterPath:["options","body"],mapper:UserDetails},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},body1={parameterPath:["options","body"],mapper:LoginCredentials},name={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}},body2={parameterPath:["options","body"],mapper:Event},id={parameterPath:"id",mapper:{serializedName:"id",required:!0,type:{name:"Number"}}},id1={parameterPath:"id",mapper:{serializedName:"Id",required:!0,type:{name:"Number"}}},body3={parameterPath:["options","body"],mapper:EnableEventInput},i={parameterPath:["options","i"],mapper:{serializedName:"i",type:{name:"Number"}}},newStr={parameterPath:["options","newStr"],mapper:{serializedName:"newStr",type:{name:"String"}}},body4={parameterPath:["options","body"],mapper:BuyTicketInput};class ApiAuthRegisterImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$7)}}const serializer$e=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec$7={path:"/api/Auth/Register",httpMethod:"POST",responses:{200:{}},requestBody:body,urlParameters:[$host],headerParameters:[contentType],mediaType:"json",serializer:serializer$e};class ApiAuthLoginImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$6)}}const serializer$d=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec$6={path:"/api/Auth/Login",httpMethod:"POST",responses:{200:{}},requestBody:body1,urlParameters:[$host],headerParameters:[contentType],mediaType:"json",serializer:serializer$d};class ApiAuthLogoutImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$5)}}const serializer$c=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec$5={path:"/api/Auth/Logout",httpMethod:"POST",responses:{200:{}},urlParameters:[$host],serializer:serializer$c};class ApiAuthGetAllUsersImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec$5)}}const serializer$b=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$5={path:"/api/Auth/GetAllUsers",httpMethod:"GET",responses:{200:{}},urlParameters:[$host],serializer:serializer$b};class ApiAuthDeleteNameImpl{constructor(e){this.client=e}delete(e,t){return this.client.sendOperationRequest({name:e,options:t},deleteOperationSpec$2)}}const serializer$a=coreClient__namespace.createSerializer(Mappers,!1),deleteOperationSpec$2={path:"/api/Auth/Delete/{name}",httpMethod:"DELETE",responses:{200:{}},urlParameters:[$host,name],serializer:serializer$a};class ApiEventImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec$4)}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$4)}}const serializer$9=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$4={path:"/api/Event",httpMethod:"GET",responses:{200:{}},urlParameters:[$host],serializer:serializer$9},postOperationSpec$4={path:"/api/Event",httpMethod:"POST",responses:{200:{}},requestBody:body2,urlParameters:[$host],headerParameters:[contentType],mediaType:"json",serializer:serializer$9};class ApiEventIdImpl{constructor(e){this.client=e}get(e,t){return this.client.sendOperationRequest({id:e,options:t},getOperationSpec$3)}delete(e,t){return this.client.sendOperationRequest({id:e,options:t},deleteOperationSpec$1)}put(e,t){return this.client.sendOperationRequest({id:e,options:t},putOperationSpec)}}const serializer$8=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$3={path:"/api/Event/{id}",httpMethod:"GET",responses:{200:{}},urlParameters:[$host,id],serializer:serializer$8},deleteOperationSpec$1={path:"/api/Event/{id}",httpMethod:"DELETE",responses:{200:{}},urlParameters:[$host,id],serializer:serializer$8},putOperationSpec={path:"/api/Event/{Id}",httpMethod:"PUT",responses:{200:{}},requestBody:body2,urlParameters:[$host,id1],headerParameters:[contentType],mediaType:"json",serializer:serializer$8};class EnableEventImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$3)}}const serializer$7=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec$3={path:"/EnableEvent",httpMethod:"POST",responses:{200:{}},requestBody:body3,urlParameters:[$host],headerParameters:[contentType],mediaType:"json",serializer:serializer$7};class DisabledEventsImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec$2)}}const serializer$6=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$2={path:"/DisabledEvents",httpMethod:"GET",responses:{200:{}},urlParameters:[$host],headerParameters:[contentType],mediaType:"json",serializer:serializer$6};class ApiTesteHelloWordImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec$1)}}const serializer$5=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$1={path:"/api/Teste/HelloWord",httpMethod:"GET",responses:{200:{}},urlParameters:[$host],serializer:serializer$5};class ApiTesteTestStringsImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec)}}const serializer$4=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec={path:"/api/Teste/testStrings",httpMethod:"GET",responses:{200:{}},urlParameters:[$host],serializer:serializer$4};class ApiTesteGetTesteStringByIndexImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$2)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec$2={path:"/api/Teste/GetTesteStringByIndex",httpMethod:"POST",responses:{200:{}},queryParameters:[i],urlParameters:[$host],serializer:serializer$3};class ApiTesteUpdateTesteStringByIndexImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec$1)}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec$1={path:"/api/Teste/UpdateTesteStringByIndex",httpMethod:"POST",responses:{200:{}},queryParameters:[i,newStr],urlParameters:[$host],serializer:serializer$2};class ApiTesteImpl{constructor(e){this.client=e}delete(e){return this.client.sendOperationRequest({options:e},deleteOperationSpec)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),deleteOperationSpec={path:"/api/Teste",httpMethod:"DELETE",responses:{200:{}},queryParameters:[i],urlParameters:[$host],serializer:serializer$1};class ApiTicketBuyImpl{constructor(e){this.client=e}post(e){return this.client.sendOperationRequest({options:e},postOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),postOperationSpec={path:"/api/Ticket/Buy",httpMethod:"POST",responses:{200:{}},requestBody:body4,urlParameters:[$host],headerParameters:[contentType],mediaType:"json",serializer:serializer};class EventsAPI extends coreClient__namespace.ServiceClient{constructor(e,t,i){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===t)throw new Error("'$host' cannot be null");var r={requestContentType:"application/json; charset=utf-8",credential:e},a="azsdk-js-eventsAPI/1.0.0-beta.1",a=(i=i||{}).userAgentOptions&&i.userAgentOptions.userAgentPrefix?i.userAgentOptions.userAgentPrefix+" "+a:a,r=(i.credentialScopes||(i.credentialScopes=["https://management.azure.com/.default"]),Object.assign(Object.assign(Object.assign({},r),i),{userAgentOptions:{userAgentPrefix:a},endpoint:null!=(a=null!=(r=i.endpoint)?r:i.baseUri)?a:"{$host}"}));super(r);let s=!1;null!=i&&i.pipeline&&0<i.pipeline.getOrderedPolicies().length&&(a=i.pipeline.getOrderedPolicies(),s=a.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),i&&i.pipeline&&0!=i.pipeline.getOrderedPolicies().length&&s||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(a=r.credentialScopes)?a:r.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.$host=t,this.apiAuthRegister=new ApiAuthRegisterImpl(this),this.apiAuthLogin=new ApiAuthLoginImpl(this),this.apiAuthLogout=new ApiAuthLogoutImpl(this),this.apiAuthGetAllUsers=new ApiAuthGetAllUsersImpl(this),this.apiAuthDeleteName=new ApiAuthDeleteNameImpl(this),this.apiEvent=new ApiEventImpl(this),this.apiEventId=new ApiEventIdImpl(this),this.enableEvent=new EnableEventImpl(this),this.disabledEvents=new DisabledEventsImpl(this),this.apiTesteHelloWord=new ApiTesteHelloWordImpl(this),this.apiTesteTestStrings=new ApiTesteTestStringsImpl(this),this.apiTesteGetTesteStringByIndex=new ApiTesteGetTesteStringByIndexImpl(this),this.apiTesteUpdateTesteStringByIndex=new ApiTesteUpdateTesteStringByIndexImpl(this),this.apiTeste=new ApiTesteImpl(this),this.apiTicketBuy=new ApiTicketBuyImpl(this)}}exports.EventsAPI=EventsAPI;